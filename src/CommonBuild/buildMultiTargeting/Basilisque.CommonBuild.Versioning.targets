<!--
   Copyright 2025 Alexander StÃ¤rk

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<Project>
  <PropertyGroup>
    <BasilisqueCommonBuildVersioningTargets_Imported>true</BasilisqueCommonBuildVersioningTargets_Imported>
  </PropertyGroup>
  
  <!-- general versioning -->
  <PropertyGroup Condition="'$(BAS_CB_Set_Versions)' == 'true'">
    <!-- ensure build type and version is not empty -->
    <BAS_CB_BuildType Condition="'$(BAS_CB_BuildType)' == ''">Alpha</BAS_CB_BuildType>
    <BAS_CB_VersionMajor Condition="'$(BAS_CB_VersionMajor)' == ''">1</BAS_CB_VersionMajor>
    <BAS_CB_VersionMinor Condition="'$(BAS_CB_VersionMinor)' == ''">0</BAS_CB_VersionMinor>
    <BAS_CB_VersionRevisionPadLength Condition="'$(BAS_CB_VersionRevisionPadLength)' == ''">5</BAS_CB_VersionRevisionPadLength>

    <!-- init version with MAJOR.MINOR -->
    <BAS_CB_Tmp_VersionShort>$(BAS_CB_VersionMajor).$(BAS_CB_VersionMinor)</BAS_CB_Tmp_VersionShort>

    <!-- add .BUILD if not empty  -->
    <BAS_CB_Tmp_VersionShort Condition="'$(BAS_CB_VersionBuild)' != ''">$(BAS_CB_Tmp_VersionShort).$(BAS_CB_VersionBuild)</BAS_CB_Tmp_VersionShort>

    <!-- add SUFFIX and REVISION -->
    <BAS_CB_Tmp_Version>$(BAS_CB_Tmp_VersionShort)</BAS_CB_Tmp_Version>
  </PropertyGroup>
  
  <!-- pad the revision if it is a number -->
  <PropertyGroup Condition="'$(BAS_CB_Set_Versions)' == 'true' AND '$(BAS_CB_VersionRevision)' != '' AND $(BAS_CB_VersionRevisionPadLength) &gt; 0">
    <_BAS_CB_VersionRevision_IsInt>$([System.Text.RegularExpressions.Regex]::IsMatch($(BAS_CB_VersionRevision), '^\d+$'))</_BAS_CB_VersionRevision_IsInt>
    <_BAS_CB_VersionRevision_Padded>$(BAS_CB_VersionRevision)</_BAS_CB_VersionRevision_Padded>
  </PropertyGroup>
  <PropertyGroup Condition="'$(_BAS_CB_VersionRevision_IsInt)' == 'true'">
    <BAS_CB_VersionRevisionFormat>{0:D$(BAS_CB_VersionRevisionPadLength)}</BAS_CB_VersionRevisionFormat>
    <_BAS_CB_VersionRevision_Padded>$([System.String]::Format($(BAS_CB_VersionRevisionFormat), $([System.Int32]::Parse($(BAS_CB_VersionRevision)))))</_BAS_CB_VersionRevision_Padded>
  </PropertyGroup>

  <!-- add pre-release suffix -->
  <PropertyGroup Condition="'$(BAS_CB_Set_Versions)' == 'true' AND '$(BAS_CB_BuildType)' != 'Release'">
    <BAS_CB_Tmp_Version>$(BAS_CB_Tmp_Version)-$(BAS_CB_BuildType)$(_BAS_CB_VersionRevision_Padded)</BAS_CB_Tmp_Version>
  </PropertyGroup>
</Project>